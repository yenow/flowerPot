<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.1" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee https://java.sun.com/xml/ns/javaee/web-app_3_1.xsd">

	<!-- The definition of the Root Spring Container shared by all Servlets and Filters -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/spring/root-context.xml
					 /WEB-INF/spring/security-context.xml 
		</param-value>
	</context-param>
	
	<!-- Creates the Spring Container shared by all Servlets and Filters -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- Processes application requests -->
	<servlet>
		<servlet-name>appServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring/appServlet/servlet-context.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>

		<!-- 파일 첨부한 것을 이진파일이라고 한다.이진파일을 binary file이라고 부른다. 이진파일 업로드 설정=>자료실 -->
		<multipart-config>
			<location>\\192.168.0.8\upload</location>
			<!-- 이진파일 업로드 서버 경로, 첨부파일은 실제 서버가 동작하는 컴퓨터 내에 있는 폴더에 업로드 시켜야 하므로 c드라이브 
				밑에 upload폴더와 임시 업로드 파일이 저장할 temp폴더를 각각 생성 -->
			<max-file-size>20971520</max-file-size>
			<!-- 1MB * 20=20MB => 업로드 되는 파일 최대크기 ,1MB는 1048576 바이트 -->
			<max-request-size>41943040</max-request-size>
			<!-- 한번에 올리수 있는 최대크기 =>40 MB -->
			<file-size-threshold>20971520</file-size-threshold>
			<!-- 20MB => 메모리 사용크기 -->
		</multipart-config>
	</servlet>
		
	<servlet-mapping>
		<servlet-name>appServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

   <!-- 스프링 시큐리티  -->
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping> 
   
   <!-- method=post로 전달되는 한글을 서버에서 받을 때 안깨지게 한다. 만약 이 설정부분을 안하면 스프링 컨트롤러 클래스에서 
		request.setCharacterEncoding ("UTF-8");을 설정해야 한다. -->
   <!-- 한글필터 -->
   <filter> 
  		<!-- filter안에는 filter-name, filter-class, init-param을 추가해 준다. filter-name은 원하는대로 지정해도됨 -->
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter
		</filter-class>
		<init-param> 
		<!-- encoidng값을 UTF-8로 만들어 준다. -->
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>


</web-app>
